import{s as i,n as s}from"../chunks/scheduler.Cs0xm5t1.js";import{S as l,i as r,e as c,c as d,g,j as m,l as p,d as u}from"../chunks/index.odHI_-bW.js";const h=""+new URL("../assets/fov.RbaBI1Zs.png",import.meta.url).href,f=""+new URL("../assets/pathfinding.Cl7iXNep.png",import.meta.url).href,b=""+new URL("../assets/noise.Bha-axIp.png",import.meta.url).href;function x(t){let e,o=`<h1 class="text-4xl font-bold mb-8 text-center">üì¶ Release v0.3.0 - Layout Feature &amp; More!</h1> <p class="mb-4">I am excited to announce the release of version <code class="bg-gray-700 p-1 rounded">0.3.0</code>
    of the <code class="code bg-gray-700 p-1 rounded">hexing</code> library! This
    update introduces advanced features for managing hexagonal grids with our
    new <strong>Layout</strong> module. Designed for game developers and applications
    requiring complex hexagonal grids, this version brings several enhancements.
    Here&#39;s a summary of what‚Äôs new:</p> <section class="mb-8"><h2 class="text-2xl font-semibold mb-2">üöÄ New Features</h2> <h3 class="text-xl font-semibold mb-2">üåç Layout Feature</h3> <p class="mb-4">The new Layout module provides sophisticated management of hexagonal grids
      using a <code class="code bg-gray-700 p-1 rounded">HashMap</code> structure. It
      facilitates the creation, manipulation, and storage of elements within hexagonal
      grids, optimizing data management in video game maps.</p> <ul class="list-disc pl-5 mb-4"><li><strong>Field of View (FOV)</strong>: Determine which positions are
        visible from a given point, considering obstacles and range limitations.</li> <li><strong>Pathfinding</strong>: Compute the shortest path between two
        positions using algorithms tailored for hexagonal grids.</li> <li><strong>Movement Fields</strong>: Calculate which positions are
        reachable within a specified range from a starting position.</li> <li><strong>Noise Maps</strong>: Generate and manipulate noise-based data
        for procedural content or simulations.</li> <li><strong>Logical Operations</strong>: Perform logical operations on
        multiple hexagonal grids, such as AND, OR, and NOT operations.</li></ul> <div class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4"><img src="${f}" alt="Pathfinding" class="w-full md:w-1/2 rounded"/> <img src="${h}" alt="Field of View" class="w-full md:w-1/2 rounded"/></div></section> <section class="mb-8"><h3 class="text-xl font-semibold mb-2">üî• Video Game Map Layouts</h3> <p class="mb-4">The layout allows for efficient organization of elements within video game
      maps, with specific examples for:</p> <ul class="list-disc pl-5 mb-4"><li><strong>Walls (or Obstacles)</strong>: Optimized management for
        pathfinding, FOV, and Field of Movement (FOM) calculations.</li> <li><strong>Biomes</strong>: Use
        <code class="code bg-gray-700 p-1 rounded">f64</code> values to handle terrain
        variations generated by procedural noise for diverse and dynamic environments.</li> <li><strong>Players</strong>: Store specific information such as position,
        health, and inventory, facilitating player interaction and progression
        tracking.</li></ul></section> <section class="mb-8"><h3 class="text-xl font-semibold mb-2">üéì Usage Examples</h3> <p class="mb-4">Detailed examples are provided to help you get started with <code class="bg-gray-700 p-1 rounded">HexLayout</code>, covering basic functionalities as well as advanced features like FOV,
      pathfinding, and noise integration.</p></section> <section class="mb-8"><h3 class="text-xl font-semibold mb-2">üõ†Ô∏è Additional Utility Functions</h3> <p class="mb-4"><strong>Bounding</strong>: A utility function for calculating the bounding
      box of a hexagonal grid.</p></section> <section class="mb-8"><h2 class="text-2xl font-semibold mb-2">üìà Compatibility with <code class="code bg-gray-700 p-1 rounded">noise</code></h2> <p class="mb-4">We have added support for the <code class="code bg-gray-700 p-1 rounded">noise</code> crate, allowing for noise-based hexagonal maps for more dynamic and varied
      terrain. Check our documentation to see how to enable and use this feature.</p> <img src="${b}" alt="Noise Map" class="w-full rounded"/></section> <section class="mb-8"><h2 class="text-2xl font-semibold mb-2">üõ†Ô∏è Update / Installation</h2> <p class="mb-4">To update your existing project:</p> <pre class="bg-gray-800 rounded my-2 p-2 overflow-x-auto"><code class="language-bash">cargo update</code></pre> <p class="mb-4">For a new installation:</p> <pre class="bg-gray-800 rounded my-2 p-2 overflow-x-auto"><code class="language-bash">cargo add hexing</code></pre></section>`;return{c(){e=c("main"),e.innerHTML=o,this.h()},l(a){e=d(a,"MAIN",{class:!0,"data-svelte-h":!0}),g(e)!=="svelte-67byr1"&&(e.innerHTML=o),this.h()},h(){m(e,"class","p-6 max-w-3xl mx-auto")},m(a,n){p(a,e,n)},p:s,i:s,o:s,d(a){a&&u(e)}}}class v extends l{constructor(e){super(),r(this,e,null,x,i,{})}}export{v as component};
